{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["labelMappings","App","useState","setResults","loading","setLoading","leftEyeResults","setLeftEyeResults","rightEyeResults","setRightEyeResults","name","setName","age","setAge","handleFileUpload","event","eye","file","target","files","data","FormData","append","axios","post","then","res","toast","catch","err","console","log","className","type","onChange","value","max","min","onClick","id","uuid","left_eye_detected_properly","right_eye_detected_properly","left_eye_prediction","right_eye_prediction","left_eye_confidence","right_eye_confidence","left_eye_file_name","right_eye_file_name","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2651965c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./styles.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst labelMappings = {\n  0: \"Can't say\",\n  1: \"Cataract immature\",\n  2: \"Cataract mature\",\n  3: \"Normal IOL\",\n  4: \"Normal Clear\",\n};\n\nfunction App() {\n  const [results, setResults] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [leftEyeResults, setLeftEyeResults] = useState({});\n  const [rightEyeResults, setRightEyeResults] = useState({});\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n\n  const handleFileUpload = (event, eye) => {\n    setLoading(true);\n\n    const file = event.target.files[0];\n    let data = new FormData();\n    data.append(\"file\", file);\n\n    axios\n      .post(\"https://test-cataract-ai.codevector.in/ai/classify\", data)\n      .then((res) => {\n        setLoading(false);\n        setResults(res.data);\n        if (eye === \"left\") setLeftEyeResults(res.data);\n        if (eye === \"right\") setRightEyeResults(res.data);\n        toast(`Success: ${eye} eye`);\n      })\n      .catch((err) => {\n        console.log(err);\n        setResults(err);\n      });\n  };\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <ToastContainer />\n          <h1 className=\"title\">Cataract Screening</h1>\n          <h2 className=\"subtitle\">for internal testing</h2>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Name</label>\n                <p className=\"control\">\n                  <input\n                    type=\"text\"\n                    className=\"input\"\n                    onChange={(event) => {\n                      setName(event.target.value);\n                    }}\n                    value={name}\n                  />\n                </p>\n              </div>\n              <div className=\"field\">\n                <label className=\"label\">Age</label>\n                <p className=\"control\">\n                  <input\n                    type=\"number\"\n                    className=\"input\"\n                    onChange={(event) => {\n                      setAge(event.target.value);\n                    }}\n                    value={age}\n                    max={120}\n                    min={0}\n                  />\n                </p>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Left Eye</label>\n                <p className=\"control\">\n                  <input\n                    type=\"file\"\n                    className=\"input\"\n                    onChange={(event) => {\n                      handleFileUpload(event, \"left\");\n                    }}\n                  />\n                </p>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Right Eye</label>\n                <p className=\"control\">\n                  <input\n                    type=\"file\"\n                    className=\"input\"\n                    onChange={(event) => {\n                      handleFileUpload(event, \"right\");\n                    }}\n                  />\n                </p>\n              </div>\n              <button\n                className=\"button is-primary is-fullwidth is-rounded\"\n                onClick={() => {\n                  !loading &&\n                    axios\n                      .post(\n                        \"https://sheet.best/api/sheets/dbb45f7e-bbaa-4c4c-8589-290490089510\",\n                        {\n                          id: uuid(),\n                          name: name,\n                          age: age,\n                          left_eye_detected_properly:\n                            leftEyeResults[\"detected_properly\"],\n                          right_eye_detected_properly:\n                            rightEyeResults[\"detected_properly\"],\n                          left_eye_prediction:\n                            leftEyeResults[\"prediction\"] + \"\",\n                          right_eye_prediction:\n                            rightEyeResults[\"prediction\"] + \"\",\n                          left_eye_confidence: leftEyeResults[\"confidence\"],\n                          right_eye_confidence: rightEyeResults[\"confidence\"],\n                          left_eye_file_name: `https://tnega-cataract-test-new.s3.amazonaws.com/${leftEyeResults[\"file_name\"]}`,\n                          right_eye_file_name: `https://tnega-cataract-test-new.s3.amazonaws.com/${rightEyeResults[\"file_name\"]}`,\n                        }\n                      )\n                      .then((res) => {\n                        toast(\"Submitted Successfully!\");\n                      })\n                      .catch((err) => {\n                        toast(\"Some error occured.\");\n                      });\n                }}\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n          <br />\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-background-dark\">\n                <div className=\"subtitle\">Left Eye</div>\n                Detected properly: {leftEyeResults[\"detected_properly\"] + \"\"}\n                <br />\n                Prediction: {labelMappings[leftEyeResults[\"prediction\"]]}\n                <br />\n                Confidence: {leftEyeResults[\"confidence\"]}\n                <br />\n                File:{\" \"}\n                <a\n                  href={`https://tnega-cataract-test-new.s3.amazonaws.com/${leftEyeResults[\"file_name\"]}`}\n                >\n                  Download\n                </a>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-background-dark\">\n                <div className=\"subtitle\">Right Eye</div>\n                Detected properly: {rightEyeResults[\"detected_properly\"] + \"\"}\n                <br />\n                Prediction: {labelMappings[rightEyeResults[\"prediction\"]]}\n                <br />\n                Confidence: {rightEyeResults[\"confidence\"]}\n                <br />\n                File:{\" \"}\n                <a\n                  href={`https://tnega-cataract-test-new.s3.amazonaws.com/${rightEyeResults[\"file_name\"]}`}\n                >\n                  Download\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}