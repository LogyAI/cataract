{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","results","setResults","loading","setLoading","className","type","onChange","event","file","target","files","data","FormData","append","axios","post","then","res","console","log","catch","err","handleFileUpload","JSON","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA4DeA,MAxDf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAgCA,OACE,yBAASC,UAAU,OAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,oBAAIA,UAAU,WAAd,kCACA,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,iBACA,mBAAGA,UAAU,UAAb,SACE,uBACEC,KAAK,OACLC,SAAU,SAACC,GAAD,OAzCC,SAACA,GACxBJ,GAAW,GAEX,IAAMK,EAAOD,EAAME,OAAOC,MAAM,GAC5BC,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQL,GAEpBM,IACGC,KAAK,qDAAsDJ,GAC3DK,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIN,MAChBR,GAAW,GACXF,EAAWgB,EAAIN,MACfG,IACGC,KACC,qEACAE,EAAIN,MAELK,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIN,SAEjBS,OAAM,SAACC,GACNH,QAAQC,IAAIE,SAGjBD,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZpB,EAAWoB,MAckBC,CAAiBf,WAI3CL,EAAU,aAAe,4BAAIqB,KAAKC,UAAUxB,aCzCxCyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3f215494.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [results, setResults] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const handleFileUpload = (event) => {\n    setLoading(true);\n\n    const file = event.target.files[0];\n    let data = new FormData();\n    data.append(\"file\", file);\n\n    axios\n      .post(\"https://test-cataract-ai.codevector.in/ai/classify\", data)\n      .then((res) => {\n        console.log(res.data);\n        setLoading(false);\n        setResults(res.data);\n        axios\n          .post(\n            \"https://sheet.best/api/sheets/dbb45f7e-bbaa-4c4c-8589-290490089510\",\n            res.data\n          )\n          .then((res) => {\n            console.log(res.data);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n        setResults(err);\n      });\n  };\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Cataract Screening</h1>\n          <h2 className=\"subtitle\">for internal testing</h2>\n          <div className=\"field\">\n            <label className=\"label\">Eye</label>\n            <p className=\"control\">\n              <input\n                type=\"file\"\n                onChange={(event) => handleFileUpload(event)}\n              />\n            </p>\n          </div>\n          {loading ? \"Loading...\" : <p>{JSON.stringify(results)}</p>}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}